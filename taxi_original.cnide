Taxi {
  export INTERNET
  export trigger_signal
  
  // Presence of train in station
  toggle as {train_presence: 42}
    -> TRAINSTOP
  // Whether the station is enabled
  TRAINSTOP ->
    [enabled]
  // Whether the train is dispatched
  TRAINSTOP ->
    [green]
  
  // Gates
  // When both close at the same time,
  // it means the player has entered the train
  toggle as {player_presence: 1}
    -> GATEWIRE
  toggle as {player_presence: 1}
    -> GATEWIRE
    
  // Destination picker
  toggle as {iron: 1} -> DESTINATION
  toggle as {copper: 1} -> DESTINATION
  toggle as {coal: 1} -> DESTINATION
  
  GATEWIRE ->
    player_presence * -1 as player_presence
    -> GW_2
  (GATEWIRE, GW2) ->
    player_presence = -2 then 1 as green
    -> TRAINSTOP
  GATEWIRE ->
    player_presence > 0 then 1 as enabled
    -> TRAINSTOP
  
  // Persist signals while train is not in station
  TRAINSTOP ->
    train_presence = 0 then 1 as all
    -> (TRAINSTOP, ENABLED_AND_NOT_HERE)
  
  // Read call for taxi
  INTERNET ->
    taxi = 1 then 1 as taxi
    -> (REPLY_SUMMON_HERE, REPLY_SUMMON_AWAY)
  // If the station is enabled, send the train here
  ENABLED_AND_NOT_HERE ->
    enabled > 0 then 1 as taxi
    -> REPLY_SUMMON_HERE
  REPLY_SUMMON_HERE ->
    taxi = 2 then taxi
    -> INTERNET
  REPLY_SUMMON_HERE ->
    taxi = 2 then enabled
    -> TRAINSTOP
  // If the train is here, summon train to elsewhere
  TRAINSTOP ->
    train_presence > 0 then 1 as taxi
    -> REPLY_SUMMON_AWAY
  (REPLY_SUMMON_AWAY, DESTINATION) ->
    taxi = 2 then all
    -> INTERNET
  
  // If the taxi has been summoned (but not because ), send it away
  INTERNET ->
    taxi = 2 then 1 as x
    -> 
  
  1 as green
    -> TRAINSTOP
}

Main {
  // System Clock signal to check for train dispatch
  {taxi: 1}
    -> INTERNET
  
  // Iron Depot
  Taxi(
    INTERNET = INTERNET,
    trigger_signal = iron)
  
  // Copper Depot
  Taxi(
    )
  
  // Coal Depot
}